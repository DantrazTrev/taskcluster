version: 1
migrationScript: |-
  begin
    create extension pgcrypto;
    create table test_entities(id text primary key, value jsonb not null, version integer not null, etag uuid default public.gen_random_uuid());
  end
methods:
  test_entities_load:
    description: test
    mode: read
    serviceName: test-entities
    args: document_id text
    returns: table (id text, value jsonb, version integer, etag uuid)
    body: |-
      begin
        return query select test_entities.id, test_entities.value, test_entities.version, test_entities.etag from test_entities where test_entities.id = document_id;
      end
  test_entities_create:
    serviceName: test-entities
    description: test
    mode: write
    args: document_id text, properties jsonb, overwrite boolean, version integer
    returns: void
    body: |-
      begin
        if overwrite then
          update test_entities
          set (value, version, etag) = (properties, test_entities_create.version, public.gen_random_uuid())
          where id = document_id;
        else
          insert into test_entities(id, value, version)
          values (
            document_id,
            properties,
            version
          );
        end if;
      end
  test_entities_delete:
    serviceName: test-entities
    description: test
    mode: write
    args: document_id text
    returns: void
    body: |-
      begin
        delete from test_entities
        where id = document_id;
      end
  test_entities_modify:
    serviceName: test-entities
    description: test
    mode: write
    args: document_id text, properties jsonb, version integer
    returns: void
    body: |-
      begin
        update test_entities
        set (value, version, etag) = (properties, test_entities_modify.version, public.gen_random_uuid())
        where id = document_id;
      end
